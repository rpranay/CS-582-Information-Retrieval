Using Multi-Context Systems to Engineer Executable Agents In the area of agent-based computing there are many proposals  for specific system architectures, and a number of proposals for general  approaches to building agents. As yet, however, there are few  attempts to relate these together, and even fewer attempts to provide  methodologies which relate designs to architectures and then to executable  agents. This paper provides a first attempt to address this  shortcoming; we propose a general method of defining architectures  for logic-based agents which can be directly executed. Our approach is  based upon the use of multi-context systems and we illustrate its use  with an example architecture capable of argumentation-based negotiation.  1 Introduction  Agent-based computing is fast emerging as a new paradigm for engineering complex, distributed systems [13, 27]. An important aspect of this trend is the use of agent architectures as a means of delivering agent-based functionality (cf. work on agent programming languages [14, 23, 25]). In t...
