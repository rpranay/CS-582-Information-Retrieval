Super Logic Programs Recently, considerable interest and research e#ort has been given to the problem of finding a suitable extension of the logic programming paradigm beyond the class of normal logic programs. In order to demonstrate that a class of programs can be justifiably called an extension of logic programs one should be able to argue that:  .  the proposed syntax of such programs resembles the syntax of logic programs but it applies to a significantly broader class of programs;  .  the proposed semantics of such programs constitutes an intuitively natural extension of the semantics of normal logic programs;  .  there exists a reasonably simple procedural mechanism allowing, at least in principle, to compute the semantics;  .  the proposed class of programs and their semantics is a special case of a more general non-monotonic formalism which clearly links it to other well-established non-monotonic formalisms. In this paper we propose a specific class of extended logic programs which will be (modestly) called super logic programs or just super-programs. We will argue that the class of super-programs satisfies all of the above conditions, and, in addition, is su#ciently flexible to allow various application-dependent extensions and modifications. We also provide a brief description of a Prolog implementation of a query-answering interpreter for the class of super-programs which is available via FTP and WWW.  Keywords: Non-Monotonic Reasoning, Logics of Knowledge and Beliefs, Semantics of Logic Programs and Deductive Databases.  # An extended abstract of this paper appeared in the Proceedings of the Fifth International Conference on Principles of Knowledge Representation and Reasoning (KR'96), Boston, Massachusetts, 1996, pp. 529--541.  + Partially supported by the National Science Fou...
