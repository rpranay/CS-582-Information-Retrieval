Logical Transactions and Serializability The concept of logic databases can serve as a clear and expressive foundation of various information systems. However, the classical logic language only refers to a single database state, although in modern information systems it is necessary to take the dynamics into account. For this purpose, several update languages were proposed, among them [1, 3, 4, 8, 9, 11], which allow to specify complex transitions from one database state to another. From the evaluation point of view, a complex state transition can and should be considered as a transaction. Up to now, the isolation property of transactions has been poorly addressed in the context of logic update languages, although it is an important problem even for classical, sequential transactions (see [2] for instance). In this paper we investigate how the serializability of logical transactions can be supported and what this means for the implementation of a transaction manager. 1 Introduction and Motivation  In [11, 12] we propose an up...
