Transformation-Based Bottom-Up Computation of the Well-Founded Model We present a bottom-up algorithm for the computation of the well-founded model of non-disjunctive logic programs. Our method is based on the notion of conditional facts and elementary program transformations studied by Bras and Dix [BD94, BD97, BD98b]. However, their "residual program" can grow to exponential size, whereas for function free programs our "program remainder" is always polynomial in the size of the extensional database (EDB). Our approach is also closely related to the alternating fixpoint procedure [VG89, VG93]. However, the alternating fixpoint procedure is known to have inefficiencies due to redundant recomputations of possible facts. By using conditional facts that can be deleted directly instead of recomputing the complement our approach is guaranteed to need not more work than the alternating fixpoint procedure and to be much more efficient in many cases. The magic set transformation as a method for bottom-up query answering is known to have problems with undefined magic facts in the context of the well-founded semantics. However, our approach treats magic set transformed programs correctly, i.e. it always computes a relevant part of the well-founded model of the original program. We show that our approach is guaranteed to need not more work than the well-founded magic sets method [KSS95] or the magic alternating fixpoint procedure [Mor96] and is much more efficient for many programs. Again the use of conditional facts gives valuable information to select the right magic facts to use and to avoid redundant recomputations.
